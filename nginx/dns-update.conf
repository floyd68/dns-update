# DNS Update Service Nginx Configuration
# This file should be placed in /etc/nginx/sites-available/
# and symlinked to /etc/nginx/sites-enabled/

# Upstream backend server
upstream dns_update_backend {
    server 127.0.0.1:5000;
    keepalive 32;
}

# HTTP server (redirect to HTTPS by default)
server {
    listen 80;
    server_name your-domain.com;  # Replace with your domain
    
    # Redirect all HTTP traffic to HTTPS
    return 301 https://$server_name$request_uri;
}

# HTTPS server
server {
    listen 443 ssl http2;
    server_name your-domain.com;  # Replace with your domain
    
    # SSL Configuration
    ssl_certificate /etc/ssl/certs/dns-update.crt;
    ssl_certificate_key /etc/ssl/private/dns-update.key;
    
    # SSL Security Settings
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-RSA-AES256-GCM-SHA512:DHE-RSA-AES256-GCM-SHA512:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES256-GCM-SHA384;
    ssl_prefer_server_ciphers off;
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 10m;
    ssl_session_tickets off;
    
    # Security Headers
    add_header X-Frame-Options DENY always;
    add_header X-Content-Type-Options nosniff always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;
    add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline'; style-src 'self' 'unsafe-inline';" always;
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
    
    # Rate Limiting
    limit_req_zone $binary_remote_addr zone=dns_api:10m rate=10r/m;
    limit_req zone=dns_api burst=20 nodelay;
    
    # Client Max Body Size (for IP addresses, very small)
    client_max_body_size 1k;
    
    # Proxy Settings
    proxy_http_version 1.1;
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection 'upgrade';
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;
    proxy_cache_bypass $http_upgrade;
    
    # Timeouts
    proxy_connect_timeout 30s;
    proxy_send_timeout 30s;
    proxy_read_timeout 30s;
    
    # Buffer Settings
    proxy_buffering on;
    proxy_buffer_size 4k;
    proxy_buffers 8 4k;
    proxy_busy_buffers_size 8k;
    
    # Health Check Endpoint (public)
    location /health {
        proxy_pass http://dns_update_backend;
        access_log /var/log/nginx/dns-update-health.log;
        
        # Allow health checks from monitoring systems
        allow 127.0.0.1;
        allow 10.0.0.0/8;
        allow 172.16.0.0/12;
        allow 192.168.0.0/16;
        deny all;
    }
    
    # DNS Update Endpoint (restricted)
    location /update-dns {
        # IP Whitelist (optional - remove if not needed)
        # allow 192.168.1.0/24;
        # allow 10.0.0.0/8;
        # deny all;
        
        # Method restriction
        limit_except POST {
            deny all;
        }
        
        # Content-Type validation
        if ($content_type !~ "text/plain") {
            return 415;
        }
        
        # Authentication is handled by the backend service
        # Supported methods: Authorization header, X-Auth-Password header, query parameter
        
        proxy_pass http://dns_update_backend;
        access_log /var/log/nginx/dns-update-api.log;
    }
    
    # Block all other requests
    location / {
        return 404;
    }
    
    # Logging
    access_log /var/log/nginx/dns-update-access.log;
    error_log /var/log/nginx/dns-update-error.log;
} 